services:
  app:
    build: . # This will build the container from the Dockerfile stored locally.
    ports:
      - "8080:8080"
    networks:
      - cool_network 
    depends_on:
      # db:
      #   condition: service_healthy   # will wait for db to be ready
      redis:
        condition: service_healthy   # will wait for redis to be ready

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_data_new:/var/lib/postgresql/data
    networks:
      - cool_network
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - cool_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     app:
  #       condition: service_started
  #   networks:
  #     - cool_network

volumes:
  postgres_data_new:

networks:
  cool_network: